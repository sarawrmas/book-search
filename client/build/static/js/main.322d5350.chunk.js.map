{"version":3,"sources":["images/logo.png","utils/auth.js","utils/mutations.js","utils/localStorage.js","components/Seeds/index.js","pages/SearchGames.js","utils/queries.js","pages/SavedGames.js","components/Login/index.js","components/Nav/index.js","components/ReviewList/index.js","components/ReviewForm/index.js","pages/SingleGame.js","App.js","index.js"],"names":["module","exports","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","LOGIN_USER","gql","SAVE_GAME","REMOVE_GAME","ADD_REVIEW","removeGameId","gameId","savedGameIds","JSON","parse","updatedSavedGameIds","filter","savedGameId","stringify","gameArray","name","description","image","rating","ratings_count","esrb","SearchGames","useMutation","saveGame","useState","searchedGames","setSearchedGames","searchInput","setSearchInput","setSavedGameIds","useEffect","gameIdArr","length","handleFormSubmit","event","a","preventDefault","console","error","handleSaveGame","gameToSave","find","game","Auth","loggedIn","variables","gameData","Jumbotron","fluid","className","Container","Form","class","onSubmit","Row","Col","xs","md","Control","value","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","map","Card","key","Body","to","Title","Img","src","alt","title","disabled","some","onClick","GET_ME","GET_GAME","SavedGames","useQuery","loading","data","removeGame","userData","me","handleDeleteGame","savedGames","border","publisher","Text","LoginForm","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","loginUser","handleInputChange","login","username","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","Collapse","id","Nav","logout","Modal","onHide","aria-labelledby","Tab","defaultActiveKey","sm","Header","closeButton","Content","Pane","eventKey","Login","handleModalClose","ReviewList","reviews","review","_id","reviewBody","createdAt","ReviewForm","setBody","characterCount","setCharacterCount","addReview","SingleThought","useParams","currentGame","reviewCount","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","info","ApolloProvider","exact","path","component","SingleGame","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.322d5350.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d06004f8.png\";","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();","import gql from 'graphql-tag';\n\nexport const LOGIN_USER = gql`\nmutation loginUser($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    token\n    user {\n      _id\n      email\n      username\n    }\n  }\n}\n`;\n\nexport const ADD_USER = gql`\nmutation addUser($username: String!, $password: String!, $email: String!) {\n  addUser(username: $username, password: $password, email: $email) {\n    \n    user {\n      _id\n      username\n      email\n    }\n    token\n  }\n}\n`;\n\nexport const SAVE_GAME = gql`\n    mutation saveGame($gameData: GameInput!) { \n    saveGame (gameData: $gameData)\n        {\n            _id\n            username\n            email\n            gameCount\n            savedGames {\n              name\n              gameId\n              rating\n              ratings_count\n              image\n              esrb\n            }\n        }\n    }\n`;\n\n\n\nexport const REMOVE_GAME = gql`\n    mutation removeGame($gameId: String!) {\n        removeGame(gameId: $gameId) {\n            _id\n            username\n            email\n            gameCount\n            savedGames {\n              name\n              gameId\n              rating\n              ratings_count\n              image\n              esrb\n            }\n        }\n}\n`;\n\nexport const ADD_REVIEW = gql`\n  mutation addReview($gameId: String!, $reviewBody: String!) {\n    addReview(gameId: $gameId, reviewBody: $reviewBody) {\n      gameId\n      name\n      image\n      rating\n      ratings_count\n      esrb\n      reviewCount\n      reviews {\n        _id\n        reviewBody\n        createdAt\n        username\n      }\n    }\n  }\n`;","export const getSavedGameIds = () => {\n  const savedGameIds = localStorage.getItem('saved_games')\n  ? JSON.parse(localStorage.getItem('saved_games'))\n  : [];\n\n  return savedGameIds;\n};\n\nexport const saveGameIds = (gameIdArr) => {\n  if (gameIdArr.length) {\n      localStorage.setItem('saved_games', JSON.stringify(gameIdArr));\n  } else {\n      localStorage.removeItem('saved_games');\n  }\n};\n\nexport const removeGameId = (gameId) => {\n  const savedGameIds = localStorage.getItem('saved_games')\n    ? JSON.parse(localStorage.getItem('saved_games'))\n    : null;\n\n  if (!savedGameIds) {\n    return false;\n  }\n\n  const updatedSavedGameIds = savedGameIds?.filter((savedGameId) => savedGameId !== gameId);\n  localStorage.setItem('saved_games', JSON.stringify(updatedSavedGameIds));\n\n  return true;\n};","export const gameArray = [\n  {\n    gameId: 1,\n    name: 'game1',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 2,\n    name: 'game2',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 3,\n    name: 'game3',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 4,\n    name: 'game4',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 5,\n    name: 'game5',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 6,\n    name: 'game6',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 7,\n    name: 'game7',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 8,\n    name: 'game8',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 9,\n    name: 'game9',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 10,\n    name: 'game10',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 11,\n    name: 'game11',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 12,\n    name: 'game12',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 13,\n    name: 'game13',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 14,\n    name: 'game14',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 15,\n    name: 'game15',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 16,\n    name: 'game16',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 17,\n    name: 'game17',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 18,\n    name: 'game18',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 19,\n    name: 'game19',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  },\n  {\n    gameId: 20,\n    name: 'game20',\n    description: 'This is my description',\n    image: 'https://wallpaperaccess.com/full/897502.png',\n    rating: 5,\n    ratings_count: 800,\n    esrb: 'Mature'\n  }\n]","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Auth from '../utils/auth';\nimport { SAVE_GAME } from '../utils/mutations';\nimport { useMutation } from '@apollo/client';\nimport { saveGameIds, getSavedGameIds } from '../utils/localStorage';\nimport { gameArray } from '../components/Seeds';\n\nconst APIKey = '16667b48fd9647ccbc16de3d49ddc40e'; //rawg api key\nconst urlGetGameList = 'https://api.rawg.io/api/games?key=';\n\n//adding a comment to see if everyone is up to date part 2\n\nconst SearchGames = () => {\n    const [saveGame] = useMutation(SAVE_GAME);\n\n    //create state for holding returned game api data\n    const [searchedGames, setSearchedGames] = useState([]);\n\n    //create state for holding our search field data\n    const [searchInput, setSearchInput] = useState('');\n\n    //create state to hold saved gameId values\n    const [savedGameIds, setSavedGameIds] = useState(getSavedGameIds());\n\n    //set up useEffect hook to save `savedGameIds` list to localStorage on component unmount\n    useEffect(() => {\n        return () => saveGameIds(savedGameIds);\n    });\n\n    //create method to search for games and set state on form submit\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        // if (!searchInput) {\n        //     return false;\n        // }\n\n        try {\n            // const response = await fetch(`${urlGetGameList}${APIKey}&search=${searchInput}`); \n            // console.log(response);\n\n            // if (!response.ok){\n            //     throw new Error('something went wrong!');\n            // }\n\n            // const { results } = await response.json();\n            // console.log(results)\n\n            // const gameResults = results.map(game => ({\n            //     gameId: game.id,\n            //     name: game.name,\n            //     image: game.background_image,\n            //     rating: game.rating,\n            //     ratings_count: game.ratings_count,\n            //     esrb: game.esrb_rating?.name || 'Not Specified'\n            // }));\n\n            // setSearchedGames(gameResults);\n            setSearchedGames(gameArray);\n            setSearchInput('');\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    //create function to handle saving a game to our database\n    const handleSaveGame = async (gameId) => {\n\n        //find the game in `searchedGames` state by the matching id\n        const gameToSave = searchedGames.find((game) => game.gameId === gameId);\n\n        //get token\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n            return false;\n        }\n\n        try {\n            await saveGame({variables: {gameData: gameToSave}});\n\n            //if game successfully saves to user's account, save game id to state\n            setSavedGameIds([...savedGameIds, gameToSave.gameId]);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    return (\n        <>\n          <Jumbotron fluid className='text-light bg-dark'>\n            <Container className='searchCSS'>\n              <h1>Search 500,00+ Games To View Ratings and Save Them To Your Collection!</h1>\n              <Form class='searchButtonCSS'onSubmit={handleFormSubmit}>\n                <Form.Row>\n                  <Col xs={12} md={8}>\n                    <Form.Control\n                      name='searchInput'\n                      value={searchInput}\n                      onChange={(e) => setSearchInput(e.target.value)}\n                      type='text'\n                      size='lg'\n                      placeholder='Search a Game!'\n                    />\n                  </Col>\n                  <Col xs={12} md={4}>\n                    <Button type='submit' variant='success' size='lg'>\n                      Submit\n                    </Button>\n                  </Col>\n                </Form.Row>\n              </Form>\n            </Container>\n          </Jumbotron>\n    \n          <h2>\n            {searchedGames.length\n              ? `Viewing ${searchedGames.length} results:`\n              : ''}\n          </h2>\n          <Container className=\"result-list\">\n            <CardColumns>\n              {searchedGames.map((game) => {\n                return (\n                  <Card key={game.gameId} className=\"gameCard\">\n                    <Card.Body>\n                    <Link to={`/${game.gameId}`}>\n                      <Card.Title>{game.name}</Card.Title>\n                    <br/>\n                    {game.image ? (\n                      <Card.Img\n                        src={game.image}\n                        alt={`The cover for ${game.title}`}\n                        variant='top'\n                        className=\"card-img\"\n                      />\n                    ) : null}\n                    </Link>\n                    <br />\n                      {Auth.loggedIn() && (\n                        <Button\n                          disabled={savedGameIds?.some((savedGameId) => savedGameId === game.gameId)}\n                          className='btn-block btn-info'\n                          onClick={() => handleSaveGame(game.gameId)}>\n                          {savedGameIds?.some((savedGameId) => savedGameId === game.gameId)\n                            ? 'Saved!'\n                            : 'Save to Collection'}\n                        </Button>\n                      )}\n                    </Card.Body>\n                  </Card>\n                );\n              })}\n            </CardColumns>\n          </Container>\n        </>\n      );\n};\n\nexport default SearchGames;","import gql from 'graphql-tag';\n\n\nexport const GET_ME = gql`\n{\n    me {\n      _id\n      username\n      email\n      gameCount\n      savedGames {\n        name\n        gameId\n        rating\n        ratings_count\n        image\n        esrb\n      }\n    }\n  }\n`;\n\nexport const GET_GAME = gql`\nquery game($gameId: String!) {\n  game(gameId: $gameId) {\n    gameId\n    name\n    description\n    image\n    rating\n    ratings_count\n    esrb\n    reviewCount\n    reviews {\n      _id\n      createdAt\n      username\n      reviewBody\n    }\n  }\n}\n`;","import React from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { removeGameId } from '../utils/localStorage';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_GAME } from '../utils/mutations';\n\nconst SavedGames = () => {\n\n    const { loading, data } = useQuery(GET_ME);\n    const [removeGame] = useMutation(REMOVE_GAME);\n    const userData = data?.me || [];\n\n    //create function that accepts the game's mongo_id value as param and deletes the game from the database\n    const handleDeleteGame = async (gameId) => {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n            return false;\n        }\n\n        try {\n            await removeGame({\n                variables: { gameId: gameId }\n            })\n\n            //up success, remove game's id from localStorage\n            removeGameId(gameId);\n        } catch (e) {\n            console.error(e);\n        }\n     };\n\n     //if data isn't here yet, say so\n     if(loading) {\n         return <h2>LOADING...</h2>\n     }\n\n     return (\n        <>\n          <Jumbotron fluid className='text-light bg-dark'>\n            <Container>\n              <h1>Viewing Your Saved Games!</h1>\n            </Container>\n          </Jumbotron>\n          <Container>\n            <h2>\n              {userData.savedGames.length\n                ? `Viewing ${userData.savedGames.length} saved ${userData.savedGames.length === 1 ? 'game' : 'games'}:`\n                : 'You have no saved games!'}\n            </h2>\n            <CardColumns>\n              {userData.savedGames.map((game) => {\n                return (\n                  <Card key={game.gameId} border='dark'>\n                    {game.image ? <Card.Img src={game.image} alt={`The cover for ${game.title}`} variant='top' /> : null}\n                    <Card.Body>\n                      <Card.Title>{game.title}</Card.Title>\n                      <p className='small'>Publisher: {game.publisher}</p>\n                      <Card.Text>{game.description}</Card.Text>\n                      <Button className='btn-block btn-danger' onClick={() => handleDeleteGame(game.gameId)}>\n                        Delete this Game!\n                      </Button>\n                    </Card.Body>\n                  </Card>\n                );\n              })}\n            </CardColumns>\n          </Container>\n        </>\n      ); \n};\n\nexport default SavedGames;\n","// see SignupForm.js for comments, comment \nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../../utils/mutations';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  //code brought in after\n  const[loginUser, {error}] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await loginUser({\n        variables: { ...userFormData}\n      });\n\n      Auth.login(data.login.token)\n\n    } catch (e) {\n      console.error(e);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n      {error && <div>Login failed</div>}\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Button, Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport LoginForm from '../Login';\nimport SignUpForm from '../Signup';\nimport Auth from '../../utils/auth';\nimport \"./nav.css\";\nimport logo from '../../images/logo.png';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n  \n  return (\n    // <div style={{display: 'flex', justifyContent: 'space-between'}}>\n    // <div>\n    // App Name\n    // </div>\n    // <LoginForm/>\n    // {/* <div>\n    // Login\n    // </div> */}\n    // </div>\n    <>\n  <header>\n    <Navbar bg='primary' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            {/* <img class=\"logo\" src={logo} alt=\"logo\"></img> */}\n            Glad You Game\n          </Navbar.Brand>\n          \n          {/* <Navbar.Toggle aria-controls='navbar' /> */}\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              {/* <Nav.Link as={Link} to='/'>\n                Search\n              </Nav.Link> */}\n              {/* if user is logged in show saved games and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved' className=\"nav-link\">\n                    Saved Games\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout} className=\"nav-link\">Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Signup</Nav.Link>\n                )}\n                </Nav>\n                </Navbar.Collapse>\n                </Container>\n  </Navbar>\n\n  {/* set modal data up */}\n  <Modal\n  size='lg'\n  show={showModal}\n  onHide={() => setShowModal(false)}\n  aria-labelledby='signup-modal'>\n  {/* tab container to do either signup or login component */}\n\n\n\n  <Tab.Container defaultActiveKey='login'>\n  <Row>\n  <Col sm={3}>\n  <Modal.Header closeButton>\n  <Modal.Title id='signup-modal'>\n  {/* <Nav variant='pills'>\n  <Nav.Item>\n  <Nav.Link eventKey='login'>Login</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n  </Nav.Item>\n  </Nav> */}\n\n  </Modal.Title>\n  </Modal.Header>\n  </Col>\n  <Col sm={9}>\n  <Modal.Body>\n          <Tab.Content>\n          <Tab.Pane eventKey='login'>\n            <LoginForm handleModalClose={() => setShowModal(false)} />\n          </Tab.Pane>\n\n          <Button variant=\"primary\">Signup</Button>{' '}\n          {/* <Tab.Pane eventKey='signup'>\n          <SignUpForm handleModalClose={() => setShowModal(false)} />\n          </Tab.Pane> */}\n        </Tab.Content>\n  </Modal.Body>\n    </Col>\n  </Row>\n        </Tab.Container>\n      </Modal>\n    </header>\n  \n      </>\n    );\n  };\n  \n  export default AppNavbar;","import React from 'react';\n\nconst ReviewList = ({ reviews }) => {\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-header\">\n        <span className=\"text-light\">Reviews</span>\n      </div>\n      <div className=\"card-body\">\n        {reviews &&\n        reviews.map(review => (\n          <p className=\"pill mb-3\" key={review._id}>\n            {review.reviewBody}<br /><br />\n              {review.username}{' '} on {review.createdAt}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ReviewList;\n\n//hello","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_REVIEW } from '../../utils/mutations';\n\nconst ReviewForm = ({ gameId }) => {\n  const [reviewBody, setBody] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addReview, { error }] = useMutation(ADD_REVIEW);\n\n  const handleChange = event => {\n    if (event.target.value.length <= 280) {\n      setBody(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await addReview({\n        variables: { reviewBody, gameId }\n      });\n\n      setBody('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <p className={`m-0 ${characterCount === 280 ? 'text-error' : ''}`}>\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <textarea\n          placeholder=\"Leave a review!\"\n          value={reviewBody}\n          className=\"form-input col-12 col-md-9\"\n          onChange={handleChange}\n        />\n        <br />\n        <button className=\"btn col-12 col-md-3\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ReviewForm;","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { GET_GAME } from '../utils/queries';\nimport ReviewList from '../components/ReviewList';\nimport ReviewForm from '../components/ReviewForm';\nimport Auth from '../utils/auth';\nimport { Link } from 'react-router-dom';\nimport { gameArray } from '../components/Seeds';\n\nconst SingleThought = () => {\n  const { gameId } = useParams();\n\n  // const [currentGame, setCurrentGame] = useState({});\n  let currentGame = gameArray[gameId];\n\n  const { loading, data } = useQuery(GET_GAME, {\n    variables: { gameId }\n  });\n\n  const game = data?.game || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  \n  // fetch(`https://api.rawg.io/api/games/${gameId}?key=16667b48fd9647ccbc16de3d49ddc40e`)\n  // .then(response => {\n  //   return response.json()\n  // })\n  // .then(data => {\n  //   setCurrentGame({\n  //     gameId: data.id,\n  //     name: data.name,\n  //     description: data.description_raw,\n  //     image: data.background_image,\n  //     rating: data.rating,\n  //     ratings_count: data.ratings_count,\n  //     esrb: data.esrb_rating?.name || 'Not Specified'\n  //   })\n  // })\n\n  return (\n    <div>\n      <Link to=\"/\">← Back</Link>\n      <h2>{currentGame.name}</h2>\n      <img\n        src={currentGame.image}\n        alt={`a screenshot from the game ${currentGame.name}`}\n        className=\"current-img\"\n      />\n      <h3>Score: {currentGame.rating} from {currentGame.ratings_count} reviews</h3>\n      <h3>Rating: {currentGame.esrb}</h3>\n      <p>{currentGame.description}</p>\n      {game.reviewCount > 0 && <ReviewList reviews={game.reviews} />}\n      {Auth.loggedIn() && <ReviewForm gameId={game.gameId} />}\n    </div>\n  );\n};\n\nexport default SingleThought;","import React from 'react';\nimport SearchGames from './pages/SearchGames';\nimport SavedGames from './pages/SavedGames';\nimport Navbar from './components/Nav';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport SingleGame from './pages/SingleGame';\n\n// establish a new link to the GraphQL server\nconst httpLink = createHttpLink({\n  uri: '/graphql'\n});\n\n// login authorization\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    }\n  };\n});\n\n// instantiate the Apollo Client instance\nconst client = new ApolloClient({\n  // create the connection to the API endpoint\n  link: authLink.concat(httpLink),\n  // instantiate a new cache object\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  console.info('what is client? ', client);\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n      <>\n      <Navbar />\n        <Switch>\n          <Route exact path='/' component={SearchGames} />\n          <Route exact path='/saved' component={SavedGames} />\n          <Route exact path='/:gameId' component={SingleGame} />\n          <Route render={() => <h1 className='display-2'>Wrong page!</h1>} />\n        </Switch>\n      </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}